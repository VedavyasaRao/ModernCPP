merge([1,2,4].begin(), [1,2,4].end(),[3,4,5,6].begin(), [3,4,5,6].end(),[0,0,0,0,0,0,0].begin())
Return:	[1, 2, 3, 4, 4, 5, 6].end()

merge([1,2,4].begin(), [1,2,4].end(),[3,4,5,6].begin(), [3,4,5,6].end(),[0,0,0,0,0,0,0].begin(), less<int>())
Return:	[1, 2, 3, 4, 4, 5, 6].end()

inplace_merge([1,2,4,3,4,5,6].begin(), [1,2,4,3,4,5,6].begin(), [1,2,4,3,4,5,6].end())
Return:	[1, 2, 3, 4, 4, 5, 6]

inplace_merge([1,2,4,3,4,5,6].begin(), [1,2,4,3,4,5,6].begin(), [1,2,4,3,4,5,6].end(), less<int>())
Return:	[1, 2, 3, 4, 4, 5, 6]

includes([1,2,3,4,4,5,6].begin(), [1,2,3,4,4,5,6].end(), [3,4,5,6].begin(), [3,4,5,6].end())
Return:	true

includes([1,2,3,4,4,5,7].begin(), [1,2,3,4,4,5,7].end(), [3,4,5,6].begin(), [3,4,5,6].end())
Return:	false

includes([1,2,3,4,4,5,6].begin(), [1,2,3,4,4,5,6].end(), [3,4,5,6].begin(), [3,4,5,6].end())
Return:	true

includes([1,2,3,4,4,5,7].begin(), [1,2,3,4,4,5,7].end(), [3,4,5,6].begin(), [3,4,5,6].end())
Return:	false

set_union([1,2,4,4].begin(), [1,2,4,4].end(),[3,4,5,6].begin(), [3,4,5,6].end(),[0,0,0,0,0,0,0].begin())
Return:	[1, 2, 3, 4, 4, 5, 6].end()

set_union([1,2,4].begin(), [1,2,4].end(),[3,4,5,6].begin(), [3,4,5,6].end(),[0,0,0,0,0,0,0].begin(), less<int>())
Return:	[1, 2, 3, 4, 5, 6, X].begin()+6

set_intersection ([2,4,4,6].begin(), [2,4,4,6].end(),[3,4,5,6].begin(), [3,4,5,6].end(),[0,0,0,0,0,0,0].begin())
Return:	[4, 6, X, X, X, X, X].begin()+2

set_intersection([1,2,4].begin(), [1,2,4].end(),[3,4,5,6].begin(), [3,4,5,6].end(),[0,0,0,0,0,0,0].begin(), less<int>())
Return:	[4, X, X, X, X, X, X].begin()+1

set_difference ([1,2,4,4].begin(), [1,2,4,4].end(),[3,4,5,6].begin(), [3,4,5,6].end(),[0,0,0,0,0,0,0].begin())
Return:	[1, 2, 4, X, X, X, X].begin()+3

set_difference([1,2,4].begin(), [1,2,4].end(),[3,4,5,6].begin(), [3,4,5,6].end(),[0,0,0,0,0,0,0].begin(), less<int>())
Return:	[1, 2, X, X, X, X, X].begin()+2

set_symmetric_difference([1,2,4,4].begin(), [1,2,4,4].end(),[3,4,5,6].begin(), [3,4,5,6].end(),[0,0,0,0,0,0,0].begin())
Return:	[1, 2, 3, 4, 5, 6, X].begin()+6

set_symmetric_difference([1,2,4].begin(), [1,2,4].end(),[3,4,5,6].begin(), [3,4,5,6].end(),[0,0,0,0,0,0,0].begin(), less<int>())
Return:	[1, 2, 3, 5, 6, X, X].begin()+5